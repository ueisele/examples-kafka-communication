---
version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${VERSION_CONFLUENT}
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      default:

  kafka:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      default:

  schema-registry:
    image: confluentinc/cp-schema-registry:${VERSION_CONFLUENT}
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:19092'
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: full_transitive

  init-topics:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    restart: on-failure
    depends_on:
      - kafka
    networks:
      default:
    command: >
      bash -c
      "kafka-topics --zookeeper zookeeper --topic source --partitions 1 --replication-factor 1 --create &&
      kafka-topics --zookeeper zookeeper --topic intermediate --partitions 1 --replication-factor 1 --create &&
      kafka-topics --zookeeper zookeeper --topic output --partitions 1 --replication-factor 1 --create"

  app-verified-generator:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - kafka
    networks:
      default:
    working_dir: /app
    volumes:
      - "../sequence/build/dist:/app"
    command: bin/sequence-verified-generator.sh --broker-list kafka:19092 --max-messages-per-key ${GENERATOR_MESSAGES_PER_KEY:-10} --num-keys ${GENERATOR_NUM_KEYS:-2} --topic-produce source --acks -1 --topic-consume output --group-id verifier --reset-policy earliest --max-duration ${GENERATOR_MAX_DURATION:--1}

  app-producer:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - kafka
      - schema-registry
    networks:
      default:
    working_dir: /app
    volumes:
      - "../producer/build/dist:/app"
    command: bin/producer.sh --property application.id=producer --property bootstrap.servers=kafka:19092 --property schema.registry.url=http://schema-registry:8081 --property acks=-1 --property auto.offset.reset=earliest --property topic.source.name=source --property topic.destination.name=intermediate --property mappers=${PRODUCER_MAPPERS:-v1}

  app-consumer:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - kafka
      - schema-registry
    networks:
      default:
    working_dir: /app
    volumes:
      - "../consumer/build/dist:/app"
    command: bin/consumer.sh --property application.id=consumer --property bootstrap.servers=kafka:19092 --property schema.registry.url=http://schema-registry:8081 --property acks=-1 --property auto.offset.reset=earliest --property topic.source.name=intermediate --property topic.destination.name=output

networks:
  default:
...