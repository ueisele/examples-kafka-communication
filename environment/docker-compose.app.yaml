---
version: '2.4'

services:
  init-topics:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    restart: on-failure
    command: >
      bash -c
      "kafka-topics --zookeeper zookeeper --topic source --partitions 1 --replication-factor 1 --create &&
      kafka-topics --zookeeper zookeeper --topic intermediate --partitions 1 --replication-factor 1 --create &&
      kafka-topics --zookeeper zookeeper --topic output --partitions 1 --replication-factor 1 --create"

  app-verified-generator:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - init-topics
    working_dir: /app
    volumes:
      - "../sequence/build/dist:/app"
    command: bin/sequence-verified-generator.sh --broker-list kafka:9092 --max-messages-per-key ${GENERATOR_MESSAGES_PER_KEY:-10} --num-keys ${GENERATOR_NUM_KEYS:-2} --topic-produce source --acks -1 --topic-consume output --group-id verifier --reset-policy earliest --max-duration ${GENERATOR_MAX_DURATION:--1}

  app-producer:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - init-topics
    working_dir: /app
    volumes:
      - "../producer/build/dist:/app"
    command: bin/producer.sh --property application.id=producer --property bootstrap.servers=kafka:9092 --property schema.registry.url=http://schema-registry:8081 --property acks=-1 --property auto.offset.reset=earliest --property topic.source.name=source --property topic.destination.name=intermediate --property mappers=${PRODUCER_MAPPERS:-v1}

  app-consumer:
    image: adoptopenjdk/openjdk11
    restart: "no"
    depends_on:
      - init-topics
    working_dir: /app
    volumes:
      - "../consumer/build/dist:/app"
    command: bin/consumer.sh --property application.id=consumer --property bootstrap.servers=kafka:9092 --property schema.registry.url=http://schema-registry:8081 --property acks=-1 --property auto.offset.reset=earliest --property topic.source.name=intermediate --property topic.destination.name=output

networks:
  default:
    name: ${DOMAIN_NAME}
...